Preconditioners: Matrix must be Positive Definite

KEY: Not going to have to actually solve problems, only generate Preconditioners 

First make network for Pos.Def. matrices, then add all
	-Question to ask: is it worth preconditioning non-definite matrices??

Preconditioned Conjugate Gradient (PCG): 
-Only for symmetric, positive definite matrices
-Parameters: tolerance, max_iterations, preconditioners
-Calculate preconditioners with Neural Network?
	-No set number of inputs/outputs; changes based on size of Matrix
	-Could be potentially more efficient than standard Cholesky factorization
	-Training/Testing data: Generate ideal preconditioners (some already generated??)

Minimum Residual Method (minres):
-Must be symmetrical, not positive definite

Generalized Minimum Residual Method (gmres):
-Must be square

Biconjugate Gradients Stabalized (bicgstab):
-Must be square

Training/Testing Data:
-236 Positive Definite Matrices (190 training, 46 testing)
-Input: All values of matrices
-Output: Pre-calculated preconditioners

Positive Definite Matrices:

chol(A,'lower')
***************
HB
Bai
Boeing
FIDAP
Mulvey
Nasa
Okunbor
Rothberg
Simon
Cunningham
Pothen
Norris
ACUSIM
Oberwolfach
Cannizzo
DNVS
GHS_psdef (pt.2,3)  -Inconsistent as a whole (ignore 4?)
Mathworks
Lourakis
Bates
Schmid (1402)
Bindel
Pajek
Cylshell
Castrillion
TKK
JGD
MaxPlanck


ichol(A, struct('type','ict','droptol',1e-3))
*********************************************
Andrews
ND
Schenk_AFE (pt.1)
AMD
GHS_psdef (1422-23)
INPRO
UTEP
BenElechi
Wissgott
McRae
CEMW
UM
Botonakis
Williams


ichol(A, struct('type','ict','droptol',1e-3,'diagcomp',alpha))
**************************************************************
GHS_psdef (pt.1)
Schenk_AFE (pt.2)


==============================================================


Non-definite matrices:

ilu(A, setup) setup.type = ilutp, setup.droptol = 1e-6, setup.udiag = 1
************************************************************************
HB
